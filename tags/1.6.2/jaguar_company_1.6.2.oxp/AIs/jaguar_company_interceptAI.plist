/* jaguar_company_interceptAI.plist for the Jaguar Company.
**
** Copyright (C) 2012 Tricky
**
** This work is licensed under the Creative Commons
** Attribution-Noncommercial-Share Alike 3.0 Unported License.
**
** To view a copy of this license, visit
** http://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter
** to Creative Commons, 171 Second Street, Suite 300, San Francisco,
** California, 94105, USA.
**
** Intercept AI for the Jaguar Company.
** Based on interceptAI.plist without the wormhole states.
*/

{
    /* Switch the running lights on and enter attack mode. */
    GLOBAL =
    {
        ENTER = (switchLightsOn, "sendScriptMessage: $shipAttacking", "setStateTo: ATTACK_SHIP");
    };

    /* Turn off the attacking variable in the ship script and exit the AI. */
    "EXIT_AI" =
    {
        ENTER = ("sendScriptMessage: $shipStoppedAttacking", exitAI);
    };

    /* Turn off the attacking variable in the ship script and exit the AI. */
    "EXIT_AI_FOR_CASCADE_WEAPON" =
    {
        ENTER = ("sendScriptMessage: $shipStoppedAttacking", "exitAIWithMessage: CASCADE_WEAPON_DETECTED");
    };

    /* Change route command. The bad guys can have a breather (for now). */
    "CHANGE_ROUTE" =
    {
        ENTER = ("sendScriptMessage: $changeRoute", performIdle, switchLightsOff, "setStateTo: EXIT_AI");
    };

    /* Attack the ship. */
    "ATTACK_SHIP" =
    {
        ENTER = ("sendScriptMessage: $detectCascadeWeapon", performAttack);
		"CASCADE_WEAPON_DETECTED" = ("setStateTo: EXIT_AI_FOR_CASCADE_WEAPON");
        "INCOMING_MISSILE" = ("setStateTo: MISSILE_DETECTED", "randomPauseAI: 0.25 0.75");
        "ENERGY_LOW" = (setTargetToPrimaryAggressor, "setStateTo: FLEE");
        "TARGET_DESTROYED" = (performIdle, switchLightsOff, "setStateTo: EXIT_AI");
        "TARGET_LOST" = (performIdle, switchLightsOff, "setStateTo: EXIT_AI");
        UPDATE = (performAttack, "sendScriptMessage: $detectCascadeWeapon", "pauseAI: 2.0");
    };

    FIGHT_OR_FLEE =
    {
        ENTER = ("sendScriptMessage: $detectCascadeWeapon");
        "CASCADE_WEAPON_DETECTED" = ("setStateTo: EXIT_AI_FOR_CASCADE_WEAPON");
        FIGHTING = (setTargetToPrimaryAggressor, "setStateTo: ATTACK_SHIP");
        FLEEING = (setTargetToPrimaryAggressor, "setStateTo: FLEE");
        "INCOMING_MISSILE" = ("setStateTo: MISSILE_DETECTED", "randomPauseAI: 0.25 0.75");
        "TARGET_DESTROYED" = ("setSpeedFactorTo: 1.0", scanForHostiles);
        "TARGET_LOST" = ("setSpeedFactorTo: 1.0", scanForHostiles);
        "TARGET_FOUND" = (setTargetToFoundTarget, "setStateTo: ATTACK_SHIP");
        "NOTHING_FOUND" = (performIdle, switchLightsOff, "setStateTo: EXIT_AI");
    };

    /* General purpose fight or flee state. */
    FLEE =
    {
        ENTER = ("sendScriptMessage: $detectCascadeWeapon", "setDesiredRangeTo: 10000", performFlee);
		"CASCADE_WEAPON_DETECTED" = ("setStateTo: EXIT_AI_FOR_CASCADE_WEAPON");
        ATTACKED = ("setStateTo: FIGHT_OR_FLEE", fightOrFleeHostiles);
        "ENERGY_FULL" = ("setStateTo: ATTACK_SHIP");
        "REACHED_SAFETY" = ("setStateTo: ATTACK_SHIP");
        UPDATE = (performFlee, "sendScriptMessage: $detectCascadeWeapon", "pauseAI: 10.0");
    };

    /* Either fight or flee from the missile. */
    "FLEE_FOR_MISSILE" = {
        ENTER = ("sendScriptMessage: $detectCascadeWeapon", "setDesiredRangeTo: 10000", performFlee, "pauseAI: 5.0");
		"CASCADE_WEAPON_DETECTED" = ("setStateTo: EXIT_AI_FOR_CASCADE_WEAPON");
        ATTACKED = ("setStateTo: FIGHT_OR_FLEE", fightOrFleeHostiles);
        "TARGET_DESTROYED" = ("setSpeedFactorTo: 1.0", scanForHostiles);
        "TARGET_LOST" = ("setSpeedFactorTo: 1.0", scanForHostiles);
        "TARGET_FOUND" = (setTargetToFoundTarget, "setStateTo: FIGHT_OR_FLEE", fightOrFleeHostiles);
        "NOTHING_FOUND" = (performIdle, switchLightsOff, "setStateTo: EXIT_AI");
        "REACHED_SAFETY" = ("setStateTo: FIGHT_OR_FLEE", fightOrFleeHostiles);
        "INCOMING_MISSILE" = ("setStateTo: MISSILE_DETECTED", "randomPauseAI: 0.25 0.75");
        UPDATE = (fightOrFleeMissile, "sendScriptMessage: $detectCascadeWeapon", "pauseAI: 10.0");
    };

    /* Deal with incoming missiles. */
    "MISSILE_DETECTED" = {
        ENTER = ("sendScriptMessage: $detectCascadeWeapon");
		"CASCADE_WEAPON_DETECTED" = ("setStateTo: EXIT_AI_FOR_CASCADE_WEAPON");
        ATTACKED = ("setStateTo: FIGHT_OR_FLEE", fightOrFleeMissile, setTargetToPrimaryAggressor);
        UPDATE = (setTargetToPrimaryAggressor, fightOrFleeMissile, "setStateTo: FLEE_FOR_MISSILE");
    };
}
